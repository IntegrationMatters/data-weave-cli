name: Release DataWeave Native CLI
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  RELEASE_EXTENSION:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-2019]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Runs a single command using the runners shell
      - name: Run native image
        run: ./gradlew build
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}

      # Runs a set of commands using the runners shell
      - name: Create Native Image
        run: ./gradlew native-cli:nativeImage

      # Create the release In github
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Build Artifact that we want to publish for windows
      - name: Build artifact name Windows
        run:  |
          echo "::set-env name=artifact::dw.exe"
        if: contains(runner.os, 'indows')

      # Build Artifact that we want to publish for other envs
      - name: Build artifact name for Linux and Mac
        run: |
          echo "::set-env name=artifact::dw"
        if: !contains(runner.os, 'indows')

      - name: Artifact version
        id: artifact_version
        run: echo "::set-env name=NATIVE_VERSION::$(echo '${{github.ref}}' | sed -e 's,.*/v\(.*\),\1,')"

      # Upload the artifact file
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: native-cli/build/graal/${{ env.artifact }}
          asset_name: data-weave-${{env.NATIVE_VERSION}}-${{runner.os}}
          asset_content_type: application/zip
