# This is a basic workflow to help you get started with Actions

name: Build Native CLI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  OSX_LINUX_WINDOWS:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-2019]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
          java-version: 11

    # Runs a single command using the runners shell
    - name: Run native image
      run: ./gradlew build
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}

    # Runs a set of commands using the runners shell
    - name: Create Native Image
      run: ./gradlew native-cli:nativeImage
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
    - name: Upload to S3
      run: |
        ./gradlew native-cli:distro
        ./gradlew native-cli:uploadDistro
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}

      # Build Artifact that we want to publish
      - name: Build artifact name
        id: artifact_name
        run: |
          if [OS == 'Windows']
          then
              echo "::set-output name=artifact::dw.exe"
          else
              echo "::set-output name=artifact::dw"
          fi
        env:
          OS: ${{runner.os}}

    - name: Upload generated script
        uses: actions/upload-artifact@v2
        with:
          name: dw-${{runner.os}}
          path: native-cli/build/graal/${{ steps.artifact_name.outputs.artifact }}